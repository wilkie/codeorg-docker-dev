version: '3.9'
services:
  # Exposes port 3000
  web:
    container_name: web
    hostname: web
    image: codedotorg/codedotorg-web
    build:
      dockerfile: ./dockerfiles/Dockerfile
      target: cdo-web
      args:
        UID: ${FIXUID:-1000}
        GID: ${FIXGID:-1000}
    cap_add:
      - SYS_PTRACE
    volumes:
      - ./src:/app/src
      - ./rbenv:/home/cdodev/.rbenv
      - ./nvm:/home/cdodev/.nvm
      - $HOME/.aws-docker:/home/cdodev/.aws
    tty: true
    depends_on:
      - db
      - minio
    working_dir: /app/src
    #command: ./bin/dashboard-server
    networks:
      - cdo_network
    profiles:
      - web

  aws-access:
    extends: web
    image: codedotorg/codedotorg-aws-access
    build:
      dockerfile: ./dockerfiles/headless.Dockerfile
      args:
        UID: ${FIXUID:-1000}
        GID: ${FIXGID:-1000}
    ports:
      # VNC port
      - "5900:5900"
    command: /bin/bash -i -c "cd /app; /bin/bash /app/bin/vnc-aws-access.sh"
    profiles:
      - aws-access

  server:
    extends: web
    command: /bin/bash -i -c "./bin/dashboard-server"
    ports:
      # Web server port
      - "3000:3000"
    profiles:
      - test

  shell:
    extends: web
    command: /bin/bash
    profiles:
      - shell

  seed:
    extends: web
    command: /bin/bash -ic 'cd dashboard; bundle exec rake seed:ui_test'
    profiles:
      - seed

  migrate:
    extends: web
    command: /bin/bash -ic 'cd dashboard; bundle exec rake db:migrate && cd ../pegasus && bundle exec rake db:migrate'
    profiles:
      - migrate

  irb:
    extends: web
    command: /bin/bash -ic 'bundle exec irb'
    profiles:
      - irb

  node:
    extends: web
    command: /bin/bash -ic 'node'
    profiles:
      - node

  console:
    extends: web
    command: ./bin/dashboard-console
    profiles:
      - console

  # This is a testing environment
  test:
    container_name: test-web
    hostname: test-web
    extends: web
    build:
      dockerfile: ./dockerfiles/Dockerfile
      target: cdo-test
      args:
        UID: ${FIXUID:-1000}
        GID: ${FIXGID:-1000}
    expose:
      - "3000"
    environment:
      # Ensure the local selenium is used
      SELENIUM_HOST: selenium
      SELENIUM_URL: 'http://selenium:4444/wd/hub'
      RAILS_ENV: test
    command: /bin/bash -i -c "./bin/dashboard-server"
    healthcheck:
      test: "curl --fail http://localhost:3000"
      interval: 2s
      retries: 100
      start_period: 30s
      timeout: 10s
    profiles:
      - test
    networks:
      cdo_network_test:
        aliases:
          - localhost.code.org
          - localhost-studio.code.org
          - localhost-hourofcode.org

  test-server:
    extends: test
    command: /bin/bash -i -c "./bin/dashboard-server"
    ports:
      # Web server port
      - "3000:3000"
    profiles:
      - test

  unit-tests:
    extends: test
    command: /bin/bash -ic 'bundle exec spring testunit'
    profiles:
      - test
    networks:
      - cdo_network_test

  ui-tests:
    extends: test
    command: /bin/bash -ic 'bundle exec rake test:ui'
    environment:
      # Ensure the local selenium is used
      SELENIUM_HOST: selenium
      SELENIUM_URL: 'http://selenium:4444/wd/hub'
    depends_on:
      selenium:
        condition: service_started
      test:
        condition: service_healthy
    profiles:
      - test
    networks:
      - cdo_network_test

  js-tests:
    extends: test
    working_dir: /app/src/apps
    command: /bin/bash -ic 'yarn test:unit --browser=FirefoxHeadless'

  # mysql 5.7.30
  # Internally exposes 3306 to other containers as 'db'
  db:
    container_name: db
    hostname: db
    # Uncomment for x86:
    #image: mysql:5.7.30
    image: biarms/mysql:5.7.30
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    expose:
      - "3306"
    volumes:
      - ./.mysql-data:/var/lib/mysql
    profiles:
      - web
    networks:
      - cdo_network
      - cdo_network_test
    # Many default ulimits are just too high
    # And, so, it will consume way too much memory (16GB+)
    ulimits:
      nofile:
        soft: "65536"
        hard: "65536"

  # Runs a database console session
  db-console:
    extends: web
    command: ./bin/mysql-client-admin
    profiles:
      - db-console

  # A Selenium server running Chrome
  selenium:
    container_name: selenium
    hostname: selenium
    image: seleniarm/standalone-chromium:latest
    expose:
      - "5900"
      - "4444"
      - "7900"
    environment:
      JAVA_OPTS: -Dwebdriver.chrome.whitelistedIps= -Dwebdriver.chrome.allowedIps=
    shm_size: '2gb'
    profiles:
      - test
    networks:
      - cdo_network_test

  # minio version RELEASE.2021-07-30T00-02-00Z
  # Exposes ports 9000 and 9001 to the world
  # You can log into the console at localhost:9001 with the given
  # username and password (codeorg / allstudents)
  minio:
    container_name: minio
    hostname: minio
    # Uncomment for x86:
    image: minio/minio:RELEASE.2021-07-30T00-02-00Z
    #image: pixelchrome/minio-arm:latest-arm32v7
    ports:
      - "9000:9000"
      - "3001:3001"
    volumes:
      - ./.minio1-storage:/data1
      - ./.minio2-storage:/data2
      - ./.minio3-storage:/data3
      - ./.minio4-storage:/data4
    environment:
      MINIO_VOLUMES: "http://minio:9000/data{1...4}"
      MINIO_SERVER_URL: "http://minio:9000"
      MINIO_ROOT_USER: codeorg
      MINIO_ROOT_PASSWORD: allstudents
      MINIO_STORAGE_CLASS_STANDARD: "EC:2"
    command: server --console-address ":3001" /data1 /data2 /data3 /data4
    profiles:
      - web
    networks:
      - cdo_network

networks:
  cdo_network:
    driver: bridge
  cdo_network_test:
    driver: bridge
